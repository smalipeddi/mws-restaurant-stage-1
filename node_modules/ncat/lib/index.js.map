{"version":3,"sources":["../src/index.js"],"names":["yargonaut","helpStyle","errorsStyle","chalk","getDefaultBanner","pkg","name","charAt","toUpperCase","slice","version","homepage","Date","getFullYear","author","license","LOG","add","args","cyan","write","bold","green","map","mapInline","footer","banner","dbanner","yargs","usage","option","alias","desc","type","epilog","yellow","example","help","argv","concat","Concat","output","undefined","path","basename","stdinCache","getStdin","buffer","module","exports","concatBanner","then","concatFiles","concatFooter","Promise","resolve","require","join","process","cwd","log","all","_","handleGlob","globs","files","reduce","acc","cur","length","Error","red","forEach","file","content","glob","stdin","split","nodir","handleFile","prepareMap","sources","source","i","relative","dirname","fs","readFile","sourceMapResolve","resolveSourceMap","toString","url","removeMapURL","catch","err","console","result","sourcesContent","outputFile","Buffer","from","getSourceMappingURL","sourceMap","stdout","extname","code","sourceMappingURL","removeFrom","replace","rest"],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport pify from 'pify';\nimport Concat from 'concat-with-sourcemaps';\nimport unixify from 'unixify';\nimport getStdin from 'get-stdin';\nimport sourceMappingURL from 'source-map-url';\nimport sourceMapResolve from 'source-map-resolve';\nimport readPkg from 'read-pkg-up';\nimport globby from 'globby';\nimport yargonaut from 'yargonaut';\nimport yargs from 'yargs';\n\nyargonaut.helpStyle('bold.green').errorsStyle('red');\nconst chalk = yargonaut.chalk();\n/**\n * Produce the default banner based on package.json info.\n *\n * @param {Object} pkg the parsed package.json.\n * @returns {String} the default banner.\n */\nconst getDefaultBanner = pkg =>\n\t`/*!\n * ${pkg.name ? pkg.name.charAt(0).toUpperCase() + pkg.name.slice(1) : 'unknown'} v${pkg.version || '0.0.0'}${\n\t\tpkg.homepage || pkg.name ? `\\n * ${pkg.homepage || `https://npm.com/${pkg.name}`}` : ''\n\t}\n *\n * Copyright (c) ${new Date().getFullYear()}${pkg.author && pkg.author.name ? ` ${pkg.author.name}` : ''}\n *${pkg.license ? ` Licensed under the ${pkg.license} license\\n *` : ''}/\\n`;\n/**\n * Log messages.\n *\n * @type {Object}\n */\nconst LOG = {\n\tadd: args => `Concat file ${chalk.cyan(args[0])}`,\n\twrite: args => `Write ${chalk.bold.green(args[0])}`,\n\tmap: args => `Concat sourcemap ${chalk.cyan(args[0])}`,\n\tmapInline: args => `Concat inline sourcemap from ${chalk.cyan(args[0])}`,\n\tfooter: args => `Concat footer from ${chalk.cyan(args[0])}`,\n\tbanner: args => `Concat banner from ${chalk.cyan(args[0])}`,\n\tdbanner: args => `Concat default banner for ${chalk.cyan(args[0])}`,\n};\nconst {argv} = yargs\n\t.usage(\n\t\t`${chalk.bold.green('Usage:')}\n  ncat [<FILES ...>] [OPTIONS] [-o|--output <OUTPUT_FILE>]`\n\t)\n\t.option('o', {\n\t\talias: 'output',\n\t\tdesc: 'Output file',\n\t\ttype: 'string',\n\t})\n\t.option('m', {\n\t\talias: 'map',\n\t\tdesc: 'Create an external sourcemap (including the sourcemaps of existing files)',\n\t\ttype: 'boolean',\n\t})\n\t.option('e', {\n\t\talias: 'map-embed',\n\t\tdesc: 'Embed the code in the sourcemap (only apply to code without an existing sourcemap)',\n\t\ttype: 'boolean',\n\t})\n\t.option('b', {\n\t\talias: 'banner',\n\t\tdesc: `Add a banner built with the package.json file. Optionally pass the path\n      to a .js file containing custom banner that can be called with 'require()'`,\n\t\ttype: 'string',\n\t})\n\t.option('f', {\n\t\talias: 'footer',\n\t\tdesc: \"The path to .js file containing custom footer that can be called with 'require()'\",\n\t\ttype: 'string',\n\t})\n\t.epilog(\n\t\tchalk.yellow(\n\t\t\t`If a file is a single dash ('-'), it reads from stdin.\nIf -o is not passed, the sourcemap is disabled and it writes to stdout.`\n\t\t)\n\t)\n\t.example('ncat file_1.js file_2.js -o dist/bundle.js', 'Basic usage')\n\t.example('ncat file_1.js file_2.js -m -o dist/bundle.js', 'Basic usage with sourcemap')\n\t.example('cat file_1.js | ncat - input_2.js > bundle.js', 'Piping input & output')\n\t.example('ncat file_1.js -b -o dist/bundle.js', 'Add the default banner')\n\t.example('ncat file_1.js -b ./banner.js -o dist/bundle.js', 'Add a custom banner')\n\t.example('ncat file_1.js -f ./footer.js -o dist/bundle.js', 'Add a footer')\n\t.help('h')\n\t.alias('h', 'help')\n\t.version()\n\t.alias('v', 'version');\n/**\n * Concat object to wich will be added banner, footer and files and their sourcemaps.\n * Will produce the final output.\n *\n * @type {Concat}\n */\nconst concat = new Concat(\n\targv.output !== undefined && argv.output !== null && argv.map,\n\targv.output ? path.basename(argv.output) : '',\n\t'\\n'\n);\n/**\n * Cache the content of stdin the first it's retrieve.\n * Allow to concatenate the content of stdin multiple times.\n *\n * @type {String}\n */\nconst stdinCache = getStdin.buffer();\n\n/**\n * Main function of the CLI. Concat banner, then files, then footer and finnaly output concatenated file.\n *\n * @method main\n * @return {Promise} Promise that resolve when the output file is written.\n */\nmodule.exports = () =>\n\tconcatBanner()\n\t\t.then(() => concatFiles())\n\t\t.then(() => concatFooter())\n\t\t.then(() => output());\n\n/**\n * Concatenate a default or custom banner.\n *\n * @return {Promise<Any>} Promise that resolve once the banner has been generated and concatenated.\n */\nfunction concatBanner() {\n\tif (typeof argv.banner !== 'undefined') {\n\t\tif (argv.banner) {\n\t\t\treturn Promise.resolve().then(() => {\n\t\t\t\tconcat.add(null, require(path.join(process.cwd(), argv.banner)));\n\t\t\t\treturn log('banner', argv.banner);\n\t\t\t});\n\t\t}\n\t\treturn readPkg().then(pkg => {\n\t\t\tconcat.add(null, getDefaultBanner(pkg.pkg));\n\t\t\treturn log('dbanner', pkg.path);\n\t\t});\n\t}\n\treturn Promise.resolve();\n}\n\n/**\n * Concatenate a custom banner.\n *\n * @return {Promise<Any>} Promise that resolve once the footer has been generated and concatenated.\n */\nfunction concatFooter() {\n\tif (argv.footer) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tconcat.add(null, require(path.join(process.cwd(), argv.footer)));\n\t\t\treturn log('footer', `Concat footer from ${argv.footer}`);\n\t\t});\n\t}\n\treturn Promise.resolve();\n}\n\n/**\n * Concatenate the files in order.\n * Exit process with error if there is less than two files, banner or footer to concatenate.\n *\n * @return {Promise<Any>} Promise that resolve once the files have been read/created and concatenated.\n */\nfunction concatFiles() {\n\treturn Promise.all(argv._.map(handleGlob)).then(globs => {\n\t\tconst files = globs.reduce((acc, cur) => acc.concat(cur), []);\n\n\t\tif (\n\t\t\t(files.length < 2 && typeof argv.banner === 'undefined' && !argv.footer) ||\n\t\t\t(files.length === 0 && (typeof argv.banner === 'undefined' || !argv.footer))\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\tchalk.bold.red('Require at least 2 file, banner or footer to concatenate. (\"ncat --help\" for help)\\n')\n\t\t\t);\n\t\t}\n\t\treturn files.forEach(file => {\n\t\t\tconcat.add(file.file, file.content, file.map);\n\t\t});\n\t});\n}\n\n/**\n * FileToConcat describe the filename, content and sourcemap to concatenate.\n *\n * @typedef {Object} FileToConcat\n * @property {String} file\n * @property {String} content\n * @property {Object} sourcemap\n */\n\n/**\n * Retrieve files matched by the gloc and call {@link handleFile} for each one found.\n * If the glob is '-' return one FileToConcat with stdin as its content.\n *\n * @param  {String} glob the glob expression for which to retrive files.\n * @return {Promise<FileToConcat[]>} a Promise that resolve to an Array of FileToConcat.\n */\nfunction handleGlob(glob) {\n\tif (glob === '-') {\n\t\treturn stdinCache.then(stdin => [{content: stdin}]);\n\t}\n\treturn globby(glob.split(' '), {nodir: true}).then(files => Promise.all(files.map(handleFile)));\n}\n\n/**\n * Update all the sources path to be relative to the file that will be written (parameter --output).\n *\n * @param {String} file path of the file being processed.\n * @param {String} content content of the file.\n * @param {Object} map existing sourcemap associated with the file.\n */\nfunction prepareMap(file, content, map) {\n\tmap.map.sources.forEach((source, i) => {\n\t\tmap.map.sources[i] = unixify(path.relative(path.dirname(argv.output), path.join(path.dirname(file), source)));\n\t});\n}\n\n/**\n * Read a file to concatenate then, if the file content reference a sourcemap, read the sourcemap and\n * returns a FileToConcat with the retrieve filename, content and sourcemap.\n * In addition:\n * - If the file content reference a sourcemap, but it cannot be read, the sourcemap is ignore\n *   and a warning message is displayed.\n * - The sourceMap URL are removed from the file content.\n * - If a sourcemap exists, {@link prepareMap} is called to update the sources path.\n * - If no sourcemap exists, a new one is created (if map parameter is set)\n *   and the file content is added to its sourceContent attribute if the map-embed parameter is set.\n *\n * @param {String} file path of the file to concat.\n * @return {Promise<FileToConcat>} A Promise that resolve to a FileToConcat with filename, content and sourcemap to concatenate.\n */\nfunction handleFile(file) {\n\tif (argv.map && argv.output) {\n\t\treturn fs.readFile(file).then(content =>\n\t\t\tpify(sourceMapResolve.resolveSourceMap)(content.toString(), file, fs.readFile)\n\t\t\t\t.then(map => {\n\t\t\t\t\tif (map) {\n\t\t\t\t\t\tprepareMap(file, content, map);\n\t\t\t\t\t\tlog('add', file);\n\t\t\t\t\t\tif (map.url) {\n\t\t\t\t\t\t\tlog('map', map.url);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlog('mapInline', file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfile: path.relative(path.dirname(argv.output), file),\n\t\t\t\t\t\t\tcontent: removeMapURL(content),\n\t\t\t\t\t\t\tmap: map.map,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tchalk.bold.yellow(`The sourcemap ${err.path} referenced in ${file} cannot be read and will be ignored`)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tlog('add', file);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfile: path.relative(path.dirname(argv.output), file),\n\t\t\t\t\t\t\tcontent: removeMapURL(content),\n\t\t\t\t\t\t\tmap: argv['map-embed'] ? {sourcesContent: [removeMapURL(content)]} : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t})\n\t\t);\n\t}\n\treturn fs.readFile(file).then(content => {\n\t\tlog('add', file);\n\t\treturn {\n\t\t\tfile,\n\t\t\tcontent: removeMapURL(content),\n\t\t};\n\t});\n}\n\n/**\n * If --output is set, write the concatenated file to disk.\n * If --map is also is set, write the concatenated sourcemap file to disk.\n * If --output is not set, output concatenated to stdout.\n *\n * @return {Promise<Any>} Promise that resolves when the file(s) are written.\n */\nfunction output() {\n\tif (argv.output) {\n\t\treturn Promise.all([\n\t\t\tfs\n\t\t\t\t.outputFile(\n\t\t\t\t\targv.output,\n\t\t\t\t\targv.map ? Buffer.concat([concat.content, Buffer.from(getSourceMappingURL())]) : concat.content\n\t\t\t\t)\n\t\t\t\t.then(() => log('write', argv.output)),\n\t\t\targv.map\n\t\t\t\t? fs.outputFile(`${argv.output}.map`, concat.sourceMap).then(() => log('write', `${argv.output}.map`))\n\t\t\t\t: undefined,\n\t\t]);\n\t}\n\tprocess.stdout.write(concat.content);\n\treturn Promise.resolve();\n}\n\n/**\n * Return a source mapping URL comment based on the output file extension.\n *\n * @return {String} the sourceMappingURL comment.\n */\nfunction getSourceMappingURL() {\n\tif (path.extname(argv.output) === '.css') {\n\t\treturn `\\n/*# sourceMappingURL=${path.basename(argv.output)}.map */`;\n\t}\n\treturn `\\n//# sourceMappingURL=${path.basename(argv.output)}.map`;\n}\n\n/**\n * Removes the sourceMappingURL comment in code and eventual double new line character.\n *\n * @param {Buffer} code the code to modify.\n * @return {String} the modified code.\n */\nfunction removeMapURL(code) {\n\treturn sourceMappingURL.removeFrom(code.toString()).replace(/\\n\\n$/, '\\n');\n}\n\n/**\n * Log to the console, only if --output is set.\n *\n * @param {String} type Type of log (add, write, map, footer, banner, dbanner).\n * @param {...String} msg Value to interpolate.\n */\nfunction log(type, ...rest) {\n\tif (argv.output) {\n\t\tconsole.log(LOG[type](rest));\n\t}\n}\n"]}