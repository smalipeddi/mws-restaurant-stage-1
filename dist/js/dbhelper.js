class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/"}static openDatabase(){return idb.open("restaurants",2,function(e){switch(e.oldVersion){case 0:e.objectStoreNames.contains("restaurantsList")||e.createObjectStore("restaurantsList",{keyPath:"id"});case 1:if(!e.objectStoreNames.contains("reviewsList")){e.createObjectStore("reviewsList",{keyPath:"id"}).createIndex("restaurant_id","restaurant_id")}}})}static fetchRestaurants(e){if(navigator.onLine){var t=DBHelper.DATABASE_URL+"restaurants";fetch(t,{method:"GET"}).then(e=>e.json()).then(t=>{DBHelper.openDatabase().then(e=>{if(!e)return;const a=e.transaction("restaurantsList","readwrite");let r=a.objectStore("restaurantsList");return t.forEach(e=>{r.put(e)}),a.complete}),e(null,t)}).catch(t=>{e(t,null)})}else{var a=DBHelper.openDatabase().then(function(e){return e.transaction("restaurantsList","readonly").objectStore("restaurantsList").getAll()});e(null,a)}}static fetchReviewsByRestaurantId(e,t){if(navigator.onLine){var a=DBHelper.DATABASE_URL+"reviews/?restaurant_id="+e;fetch(a,{method:"GET"}).then(e=>e.json()).then(e=>{t(null,e)}).catch(e=>{t(e,null)})}else DBHelper.openDatabase().then(function(t){return t.transaction("reviewsList","readonly").objectStore("reviewsList").getAll(e)})}static saveRestaurantsToDatabase(e){DBHelper.openDatabase().then(t=>{if(!t)return;const a=t.transaction("restaurantsList","readwrite");let r=a.objectStore("restaurantsList");return e.forEach(e=>{r.put(e)}),a.complete})}static saveReviewsToDatabase(e){DBHelper.openDatabase().then(t=>{if(!t)return;const a=t.transaction("reviewsList","readwrite");let r=a.objectStore("reviewsList");return e&&"object"==typeof e&&e.constructor===Array?e.forEach(e=>{r.put(e)}):r.put(e),a.complete})}static saveRestaurantFavoriteToDatabase(e,t){fetch(`http://localhost:1337/restaurants/${t}/?is_favorite=${e}`,{method:"PUT"}).then(function(){DBHelper.openDatabase().then(a=>{if(!a)return;let r=a.transaction("restaurantsList","readwrite").objectStore("restaurantsList");r.get(t).then(function(t){t.is_favorite=e,r.put(t)})})})}static sendReviewToServer(e){console.log("Sending Reviews : ",e);var t={method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})};fetch("http://localhost:1337/reviews",t).then(e=>e.json()).then(e=>{console.log("Fetched reviews successfully"),DBHelper.saveReviewsToDatabase(e)}).catch(e=>console.log("error:",e))}static saveReviewsTolocalStorage(e){window.localStorage.setItem("reviews",JSON.stringify(e))}static getReviewsFromlocalStorage(){var e=[];return null!==window.localStorage.getItem("reviews")&&(e=window.localStorage.getItem("reviews")),e}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.find(t=>t.id==e);a?t(null,a):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.cuisine_type==e);t(null,a)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.neighborhood==e);t(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,a){DBHelper.fetchRestaurants((r,s)=>{if(r)a(r,null);else{let r=s;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),a(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].neighborhood),r=t.filter((e,a)=>t.indexOf(e)==a);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].cuisine_type),r=t.filter((e,a)=>t.indexOf(e)==a);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return console.log(e),`/img/${e.photograph}.jpg`}static mapMarkerForRestaurant(e){const t=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return t.addTo(newMap),t}}